{"ast":null,"code":"/*!\n * jQuery UI Widget 1.8.21\n *\n * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Widget\n */\n(function ($, undefined) {\n  // jQuery 1.4+\n  if ($.cleanData) {\n    var _cleanData = $.cleanData;\n\n    $.cleanData = function (elems) {\n      for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n        try {\n          $(elem).triggerHandler(\"remove\"); // http://bugs.jquery.com/ticket/8235\n        } catch (e) {}\n      }\n\n      _cleanData(elems);\n    };\n  } else {\n    var _remove = $.fn.remove;\n\n    $.fn.remove = function (selector, keepData) {\n      return this.each(function () {\n        if (!keepData) {\n          if (!selector || $.filter(selector, [this]).length) {\n            $(\"*\", this).add([this]).each(function () {\n              try {\n                $(this).triggerHandler(\"remove\"); // http://bugs.jquery.com/ticket/8235\n              } catch (e) {}\n            });\n          }\n        }\n\n        return _remove.call($(this), selector, keepData);\n      });\n    };\n  }\n\n  $.widget = function (name, base, prototype) {\n    var namespace = name.split(\".\")[0],\n        fullName;\n    name = name.split(\".\")[1];\n    fullName = namespace + \"-\" + name;\n\n    if (!prototype) {\n      prototype = base;\n      base = $.Widget;\n    } // create selector for plugin\n\n\n    $.expr[\":\"][fullName] = function (elem) {\n      return !!$.data(elem, name);\n    };\n\n    $[namespace] = $[namespace] || {};\n\n    $[namespace][name] = function (options, element) {\n      // allow instantiation without initializing for simple inheritance\n      if (arguments.length) {\n        this._createWidget(options, element);\n      }\n    };\n\n    var basePrototype = new base(); // we need to make the options hash a property directly on the new instance\n    // otherwise we'll modify the options hash on the prototype that we're\n    // inheriting from\n    //  $.each( basePrototype, function( key, val ) {\n    //    if ( $.isPlainObject(val) ) {\n    //      basePrototype[ key ] = $.extend( {}, val );\n    //    }\n    //  });\n\n    basePrototype.options = $.extend(true, {}, basePrototype.options);\n    $[namespace][name].prototype = $.extend(true, basePrototype, {\n      namespace: namespace,\n      widgetName: name,\n      widgetEventPrefix: $[namespace][name].prototype.widgetEventPrefix || name,\n      widgetBaseClass: fullName\n    }, prototype);\n    $.widget.bridge(name, $[namespace][name]);\n  };\n\n  $.widget.bridge = function (name, object) {\n    $.fn[name] = function (options) {\n      var isMethodCall = typeof options === \"string\",\n          args = Array.prototype.slice.call(arguments, 1),\n          returnValue = this; // allow multiple hashes to be passed on init\n\n      options = !isMethodCall && args.length ? $.extend.apply(null, [true, options].concat(args)) : options; // prevent calls to internal methods\n\n      if (isMethodCall && options.charAt(0) === \"_\") {\n        return returnValue;\n      }\n\n      if (isMethodCall) {\n        this.each(function () {\n          var instance = $.data(this, name),\n              methodValue = instance && $.isFunction(instance[options]) ? instance[options].apply(instance, args) : instance; // TODO: add this back in 1.9 and use $.error() (see #5972)\n          //        if ( !instance ) {\n          //          throw \"cannot call methods on \" + name + \" prior to initialization; \" +\n          //            \"attempted to call method '\" + options + \"'\";\n          //        }\n          //        if ( !$.isFunction( instance[options] ) ) {\n          //          throw \"no such method '\" + options + \"' for \" + name + \" widget instance\";\n          //        }\n          //        var methodValue = instance[ options ].apply( instance, args );\n\n          if (methodValue !== instance && methodValue !== undefined) {\n            returnValue = methodValue;\n            return false;\n          }\n        });\n      } else {\n        this.each(function () {\n          var instance = $.data(this, name);\n\n          if (instance) {\n            instance.option(options || {})._init();\n          } else {\n            $.data(this, name, new object(options, this));\n          }\n        });\n      }\n\n      return returnValue;\n    };\n  };\n\n  $.Widget = function (options, element) {\n    // allow instantiation without initializing for simple inheritance\n    if (arguments.length) {\n      this._createWidget(options, element);\n    }\n  };\n\n  $.Widget.prototype = {\n    widgetName: \"widget\",\n    widgetEventPrefix: \"\",\n    options: {\n      disabled: false\n    },\n    _createWidget: function _createWidget(options, element) {\n      // $.widget.bridge stores the plugin instance, but we do it anyway\n      // so that it's stored even before the _create function runs\n      $.data(element, this.widgetName, this);\n      this.element = $(element);\n      this.options = $.extend(true, {}, this.options, this._getCreateOptions(), options);\n      var self = this;\n      this.element.bind(\"remove.\" + this.widgetName, function () {\n        self.destroy();\n      });\n\n      this._create();\n\n      this._trigger(\"create\");\n\n      this._init();\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      return $.metadata && $.metadata.get(this.element[0])[this.widgetName];\n    },\n    _create: function _create() {},\n    _init: function _init() {},\n    destroy: function destroy() {\n      this.element.unbind(\".\" + this.widgetName).removeData(this.widgetName);\n      this.widget().unbind(\".\" + this.widgetName).removeAttr(\"aria-disabled\").removeClass(this.widgetBaseClass + \"-disabled \" + \"ui-state-disabled\");\n    },\n    widget: function widget() {\n      return this.element;\n    },\n    option: function option(key, value) {\n      var options = key;\n\n      if (arguments.length === 0) {\n        // don't return a reference to the internal hash\n        return $.extend({}, this.options);\n      }\n\n      if (typeof key === \"string\") {\n        if (value === undefined) {\n          return this.options[key];\n        }\n\n        options = {};\n        options[key] = value;\n      }\n\n      this._setOptions(options);\n\n      return this;\n    },\n    _setOptions: function _setOptions(options) {\n      var self = this;\n      $.each(options, function (key, value) {\n        self._setOption(key, value);\n      });\n      return this;\n    },\n    _setOption: function _setOption(key, value) {\n      this.options[key] = value;\n\n      if (key === \"disabled\") {\n        this.widget()[value ? \"addClass\" : \"removeClass\"](this.widgetBaseClass + \"-disabled\" + \" \" + \"ui-state-disabled\").attr(\"aria-disabled\", value);\n      }\n\n      return this;\n    },\n    enable: function enable() {\n      return this._setOption(\"disabled\", false);\n    },\n    disable: function disable() {\n      return this._setOption(\"disabled\", true);\n    },\n    _trigger: function _trigger(type, event, data) {\n      var prop,\n          orig,\n          callback = this.options[type];\n      data = data || {};\n      event = $.Event(event);\n      event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase(); // the original event may come from any element\n      // so we need to reset the target on the new event\n\n      event.target = this.element[0]; // copy original event properties over to the new event\n\n      orig = event.originalEvent;\n\n      if (orig) {\n        for (prop in orig) {\n          if (!(prop in event)) {\n            event[prop] = orig[prop];\n          }\n        }\n      }\n\n      this.element.trigger(event, data);\n      return !($.isFunction(callback) && callback.call(this.element[0], event, data) === false || event.isDefaultPrevented());\n    }\n  };\n})(jQuery);\n/*!\n * Marco Polo v1.8.1\n *\n * A jQuery autocomplete plugin for the discerning developer.\n *\n * https://github.com/jstayton/jquery-marcopolo\n *\n * Copyright 2014 by Justin Stayton\n * Licensed MIT\n */\n\n\n(function (factory) {\n  'use strict'; // Register as an AMD module, compatible with script loaders like RequireJS.\n  // Source: https://github.com/umdjs/umd/blob/master/jqueryPlugin.js\n\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else {\n    factory(jQuery);\n  }\n})(function ($, undefined) {\n  'use strict'; // The cache spans all instances and is indexed by URL. This allows different\n  // instances to pull the same cached results if their URLs match.\n\n  var cache = {}; // jQuery UI's Widget Factory provides an object-oriented plugin framework\n  // that handles the common plumbing tasks.\n\n  $.widget('mp.marcoPolo', {\n    // Default options.\n    options: {\n      // Whether to cache query results.\n      cache: true,\n      // Whether to compare the selected item against items displayed in the\n      // results list. The selected item is highlighted if a match is found,\n      // instead of the first item in the list ('highlight' option must be\n      // enabled). Set this option to 'true' if the data is a string;\n      // otherwise, specify the data object attribute name to compare on.\n      compare: false,\n      // Additional data to be sent in the request query string.\n      data: {},\n      // The number of milliseconds to delay before firing a request after a\n      // change is made to the input value.\n      delay: 250,\n      // Format the raw data that's returned from the ajax request. Useful for\n      // further filtering the data or returning the array of results that's\n      // embedded deeper in the object.\n      formatData: null,\n      // Format the text that's displayed when the ajax request fails. Setting\n      // this option to 'null' or returning 'false' suppresses the message from\n      // being displayed.\n      formatError: function formatError() {\n        return '<em>Your search could not be completed at this time.</em>';\n      },\n      // Format the display of each item in the results list.\n      formatItem: function formatItem(data) {\n        return data.title || data.name;\n      },\n      // Format the text that's displayed when the minimum number of characters\n      // (specified with the 'minChars' option) hasn't been reached. Setting\n      // this option to 'null' or returning 'false' suppresses the message from\n      // being displayed.\n      formatMinChars: function formatMinChars(minChars) {\n        return '<em>Your search must be at least <strong>' + minChars + '</strong> characters.</em>';\n      },\n      // Format the text that's displayed when there are no results returned\n      // for the requested input value. Setting this option to 'null' or\n      // returning 'false' suppresses the message from being displayed.\n      formatNoResults: function formatNoResults(q) {\n        return '<em>No results for <strong>' + q + '</strong>.</em>';\n      },\n      // Whether to hide the results list when an item is selected. The results\n      // list is still hidden when the input is blurred for any other reason.\n      hideOnSelect: true,\n      // Whether to automatically highlight an item when the results list is\n      // displayed. Usually it's the first item, but it could be the previously\n      // selected item if 'compare' is specified.\n      highlight: true,\n      // Positioning a label over an input is a common design pattern\n      // (sometimes referred to as 'overlabel') that unfortunately doesn't\n      // work so well with all of the input focus/blur events that occur with\n      // autocomplete. With this option, however, the hiding/showing of the\n      // label is handled internally to provide a built-in solution to the\n      // problem.\n      label: null,\n      // The minimum number of characters required before a request is fired.\n      minChars: 1,\n      // Called when the user is finished interacting with the autocomplete\n      // interface, not just the text input, which loses and gains focus on a\n      // results list mouse click.\n      onBlur: null,\n      // Called when the input value changes.\n      onChange: null,\n      // Called when the ajax request fails.\n      onError: null,\n      // Called when the input field receives focus.\n      onFocus: null,\n      // Called when the minimum number of characters (specified with the\n      // 'minChars' option) hasn't been reached by the end of the 'delay'.\n      onMinChars: null,\n      // Called when there are no results returned for the request.\n      onNoResults: null,\n      // Called before the ajax request is made.\n      onRequestBefore: null,\n      // Called after the ajax request completes (success or error).\n      onRequestAfter: null,\n      // Called when there are results to be displayed.\n      onResults: null,\n      // Called when an item is selected from the results list or passed in\n      // through the 'selected' option.\n      onSelect: function onSelect(data) {\n        this.val(data.title || data.name);\n      },\n      // The name of the query string parameter that is set with the input\n      // value.\n      param: 'q',\n      // Whether to clear the input value when no selection is made from the\n      // results list.\n      required: false,\n      // The list items to make selectable.\n      selectable: '*',\n      // Prime the input with a selected item.\n      selected: null,\n      // Whether to allow the browser's default behavior of submitting the form\n      // on ENTER.\n      submitOnEnter: false,\n      // The URL to GET request for the results.\n      url: null\n    },\n    // Key code to key name mapping for easy reference.\n    keys: {\n      DOWN: 40,\n      END: 35,\n      ENTER: 13,\n      ESC: 27,\n      HOME: 36,\n      TAB: 9,\n      UP: 38\n    },\n    // Initialize the plugin on an input.\n    _create: function _create() {\n      var self = this,\n          $input; // Create a more appropriately named alias for the input.\n\n      self.$input = $input = self.element.addClass('mp_input'); // The existing input name or a created one. Used for building the ID of\n      // other elements.\n\n      self.inputName = 'mp_' + ($input.attr('name') || $.now()); // Create an empty list for displaying future results. Insert it directly\n      // after the input element.\n\n      self.$list = $('<ol class=\"mp_list\" />').attr({\n        'aria-atomic': 'true',\n        'aria-busy': 'false',\n        'aria-live': 'polite',\n        'id': self.inputName + '_list',\n        'role': 'listbox'\n      }).hide().insertAfter(self.$input); // Remember original input attribute values for when 'destroy' is called\n      // and the input is returned to its original state.\n\n      self.inputOriginals = {\n        'aria-activedescendant': $input.attr('aria-activedescendant'),\n        'aria-autocomplete': $input.attr('aria-autocomplete'),\n        'aria-expanded': $input.attr('aria-expanded'),\n        'aria-labelledby': $input.attr('aria-labelledby'),\n        'aria-owns': $input.attr('aria-owns'),\n        'aria-required': $input.attr('aria-required'),\n        'autocomplete': $input.attr('autocomplete'),\n        'role': $input.attr('role')\n      }; // Set plugin-specific attributes.\n\n      $input.attr({\n        'aria-autocomplete': 'list',\n        'aria-owns': self.$list.attr('id'),\n        'autocomplete': 'off',\n        'role': 'combobox'\n      }); // The ajax request to get results is stored in case the request needs to\n      // be aborted before a response is returned.\n\n      self.ajax = null;\n      self.ajaxAborted = false; // A reference to this function is maintained for unbinding in the\n      // 'destroy' method. This is necessary because the selector is so\n      // generic (document).\n\n      self.documentMouseup = null; // \"Pseudo\" focus includes any interaction with the plugin, even if the\n      // input has blurred.\n\n      self.focusPseudo = false; // \"Real\" focus is strictly when the input has focus.\n\n      self.focusReal = false; // Whether a mousedown event is triggered on a list item.\n\n      self.mousedown = false; // The currently selected data.\n\n      self.selectedData = null; // Whether the last selection was by mouseup.\n\n      self.selectedMouseup = false; // The request buffer timer in case the timer needs to be aborted due to\n      // another key press.\n\n      self.timer = null; // The current input value for comparison.\n\n      self.value = self.$input.val(); // Bind the necessary events.\n\n      self._bindInput()._bindList()._bindDocument();\n\n      self._initSelected()._initOptions();\n    },\n    // Set an option.\n    _setOption: function _setOption(option, value) {\n      // Required call to the parent where the new option value is saved.\n      $.Widget.prototype._setOption.apply(this, arguments);\n\n      this._initOptions(option, value);\n    },\n    // Initialize options that require a little extra work.\n    _initOptions: function _initOptions(option, value) {\n      var self = this,\n          allOptions = option === undefined,\n          options = {}; // If no option is specified, initialize all options.\n\n      if (allOptions) {\n        options = self.options;\n      } // Otherwise, initialize only the specified option.\n      else {\n          options[option] = value;\n        }\n\n      $.each(options, function (option, value) {\n        switch (option) {\n          case 'label':\n            // Ensure that the 'label' is a jQuery object if a selector string\n            // or plain DOM element is passed.\n            self.options.label = $(value).addClass('mp_label'); // Ensure that the label has an ID for ARIA support.\n\n            if (self.options.label.attr('id')) {\n              self.removeLabelId = false;\n            } else {\n              self.removeLabelId = true;\n              self.options.label.attr('id', self.inputName + '_label');\n            }\n\n            self._toggleLabel();\n\n            self.$input.attr('aria-labelledby', self.options.label.attr('id'));\n            break;\n\n          case 'required':\n            self.$input.attr('aria-required', value);\n            break;\n\n          case 'selected':\n            // During initial creation (when all options are initialized), only\n            // initialize the 'selected' value if there is one. The\n            // '_initSelected' method parses the input's attributes for a\n            // selected value.\n            if (allOptions && value) {\n              self.select(value, null, true);\n            }\n\n            break;\n\n          case 'url':\n            // If no 'url' option is specified, use the parent form's 'action'.\n            if (!value) {\n              self.options.url = self.$input.closest('form').attr('action');\n            }\n\n            break;\n        }\n      });\n      return self;\n    },\n    // Programmatically change the input value without triggering a search\n    // request (use the 'search' method for that). If the value is different\n    // than the current input value, the 'onChange' callback is fired.\n    change: function change(q, onlyValue) {\n      var self = this; // Change the input value if a new value is specified.\n\n      if (q === self.value) {\n        return;\n      }\n\n      if (q !== self.$input.val()) {\n        self.$input.val(q);\n      } // Reset the currently selected data.\n\n\n      self.selectedData = null; // Keep track of the new input value for later comparison.\n\n      self.value = q;\n\n      self._trigger('change', [q]);\n\n      if (onlyValue !== true) {\n        if (self.focusPseudo) {\n          // Clear out the existing results to prevent future stale results\n          // in case the change is made while the input has focus.\n          self._cancelPendingRequest()._hideAndEmptyList();\n        } else {\n          // Show or hide the label depending on if the input has a value.\n          self._toggleLabel();\n        }\n      }\n    },\n    // Programmatically trigger a search request using the existing input value\n    // or a new one.\n    search: function search(q) {\n      var $input = this.$input; // Change the input value if a new value is specified. Otherwise, use the\n      // existing input value.\n\n      if (q !== undefined) {\n        $input.val(q);\n      } // Focus on the input to start the request and enable keyboard\n      // navigation (only available when the input has focus).\n\n\n      $input.focus();\n    },\n    // Select an item from the results list.\n    select: function select(data, $item, initial) {\n      var self = this,\n          $input = self.$input,\n          hideOnSelect = self.options.hideOnSelect;\n\n      if (hideOnSelect) {\n        self._hideList();\n      } // If there's no data, consider this a call to deselect (or reset) the\n      // current value.\n\n\n      if (!data) {\n        return self.change('');\n      } // Save the selected data for later reference.\n\n\n      self.selectedData = data;\n\n      self._trigger('select', [data, $item, !!initial]); // It's common to update the input value with the selected item during\n      // 'onSelect', so check if that has occurred and store the new value.\n\n\n      if ($input.val() !== self.value) {\n        self.value = $input.val(); // Check if the label needs to be toggled when this method is called\n        // programmatically (usually meaning the input doesn't have focus).\n\n        if (!self.focusPseudo) {\n          self._toggleLabel();\n        } // Hide and empty the existing results to prevent future stale results.\n\n\n        self._hideAndEmptyList();\n      }\n    },\n    // Initialize the input with a selected value from the 'data-selected'\n    // attribute (JSON) or standard 'value' attribute (string).\n    _initSelected: function _initSelected() {\n      var self = this,\n          $input = self.$input,\n          data = $input.data('selected'),\n          value = $input.val();\n\n      if (data) {\n        self.select(data, null, true);\n      } else if (value) {\n        self.select(value, null, true);\n      }\n\n      return self;\n    },\n    // Get the currently selected data.\n    selected: function selected() {\n      return this.selectedData;\n    },\n    // Remove the autocomplete functionality and return the selected input\n    // fields to their original state.\n    destroy: function destroy() {\n      var self = this,\n          options = self.options,\n          $input = self.$input; // Remove the results list element.\n\n      self.$list.remove(); // Reset the input to its original attribute values.\n\n      $.each(self.inputOriginals, function (attribute, value) {\n        if (value === undefined) {\n          $input.removeAttr(attribute);\n        } else {\n          $input.attr(attribute, value);\n        }\n      });\n      $input.removeClass('mp_input'); // Reset the label to its original state.\n\n      if (options.label) {\n        options.label.removeClass('mp_label');\n\n        if (self.removeLabelId) {\n          options.label.removeAttr('id');\n        }\n      } // Remove the specific document 'mouseup' event for this instance.\n\n\n      $(document).unbind('mouseup.marcoPolo', self.documentMouseup); // Parent destroy removes the input's data and events.\n\n      $.Widget.prototype.destroy.apply(self, arguments);\n    },\n    // Get the results list element.\n    list: function list() {\n      return this.$list;\n    },\n    // Bind the necessary events to the input.\n    _bindInput: function _bindInput() {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list;\n      $input.bind('focus.marcoPolo', function () {\n        // Do nothing if the input already has focus. This prevents\n        // additional 'focus' events from initiating the same request.\n        if (self.focusReal) {\n          return;\n        } // It's overly complicated to check if an input field has focus, so\n        // \"manually\" keep track in the 'focus' and 'blur' events.\n\n\n        self.focusPseudo = true;\n        self.focusReal = true;\n\n        self._toggleLabel(); // If this focus is the result of a mouse selection (which re-focuses\n        // on the input), ignore as if a blur never occurred.\n\n\n        if (self.selectedMouseup) {\n          self.selectedMouseup = false;\n        } // For everything else, initiate a request.\n        else {\n            self._trigger('focus');\n\n            self._request($input.val());\n          }\n      }).bind('keydown.marcoPolo', function (key) {\n        var $highlighted = $();\n\n        switch (key.which) {\n          // Highlight the previous item.\n          case self.keys.UP:\n            // The default moves the cursor to the beginning or end of the\n            // input value. Keep it in its current place.\n            key.preventDefault(); // Show the list if it has been hidden by ESC.\n\n            self._showList()._highlightPrev();\n\n            break;\n          // Highlight the next item.\n\n          case self.keys.DOWN:\n            // The default moves the cursor to the beginning or end of the\n            // input value. Keep it in its current place.\n            key.preventDefault(); // Show the list if it has been hidden by ESC.\n\n            self._showList()._highlightNext();\n\n            break;\n          // Highlight the first item.\n\n          case self.keys.HOME:\n            // Show the list if it has been hidden by ESC.\n            self._showList()._highlightFirst();\n\n            break;\n          // Highlight the last item.\n\n          case self.keys.END:\n            // Show the list if it has been hidden by ESC.\n            self._showList()._highlightLast();\n\n            break;\n          // Select the currently highlighted item. Input keeps focus.\n\n          case self.keys.ENTER:\n            // Prevent selection if the list isn't visible.\n            if (!$list.is(':visible')) {\n              // Prevent the form from submitting.\n              if (!self.options.submitOnEnter) {\n                key.preventDefault();\n              }\n\n              return;\n            }\n\n            $highlighted = self._highlighted();\n\n            if ($highlighted.length) {\n              self.select($highlighted.data('marcoPolo'), $highlighted);\n            } // Prevent the form from submitting if 'submitOnEnter' is\n            // disabled or if there's a highlighted item.\n\n\n            if (!self.options.submitOnEnter || $highlighted.length) {\n              key.preventDefault();\n            }\n\n            break;\n          // Select the currently highlighted item. Input loses focus.\n\n          case self.keys.TAB:\n            // Prevent selection if the list isn't visible.\n            if (!$list.is(':visible')) {\n              return;\n            }\n\n            $highlighted = self._highlighted();\n\n            if ($highlighted.length) {\n              self.select($highlighted.data('marcoPolo'), $highlighted);\n            }\n\n            break;\n          // Hide the list.\n\n          case self.keys.ESC:\n            self._cancelPendingRequest()._hideList();\n\n            break;\n        }\n      }).bind('keyup.marcoPolo', function () {\n        // Check if the input value has changed. This prevents keys like CTRL\n        // and SHIFT from firing a new request.\n        if ($input.val() !== self.value) {\n          self._request($input.val());\n        }\n      }).bind('blur.marcoPolo', function () {\n        self.focusReal = false; // When an item in the results list is clicked, the input blur event\n        // fires before the click event, causing the results list to become\n        // hidden (code below). This 1ms timeout ensures that the click event\n        // code fires before that happens.\n\n        setTimeout(function () {\n          // If the $list 'mousedown' event has fired without a 'mouseup'\n          // event, wait for that before dismissing everything.\n          if (!self.mousedown) {\n            self._dismiss();\n          }\n        }, 1);\n      });\n      return self;\n    },\n    // Bind the necessary events to the list.\n    _bindList: function _bindList() {\n      var self = this;\n      self.$list.bind('mousedown.marcoPolo', function () {\n        // Tracked for use in the input 'blur' event.\n        self.mousedown = true;\n      }).delegate('li.mp_selectable', 'mouseover', function () {\n        self._addHighlight($(this));\n      }).delegate('li.mp_selectable', 'mouseout', function () {\n        self._removeHighlight($(this));\n      }).delegate('li.mp_selectable', 'mouseup', function () {\n        var $item = $(this);\n        self.select($item.data('marcoPolo'), $item); // This event is tracked so that when 'focus' is called on the input\n        // (below), a new request isn't fired.\n\n        self.selectedMouseup = true; // Give focus back to the input for easy tabbing on to the next\n        // field.\n\n        self.$input.focus();\n      });\n      return self;\n    },\n    // Bind the necessary events to the document.\n    _bindDocument: function _bindDocument() {\n      var self = this; // A reference to this function is maintained for unbinding in the\n      // 'destroy' method. This is necessary because the selector is so\n      // generic (document).\n\n      $(document).bind('mouseup.marcoPolo', self.documentMouseup = function () {\n        // Tracked for use in the input 'blur' event.\n        self.mousedown = false; // Ensure that everything is dismissed if anything other than the input\n        // is clicked. (A click on a selectable list item is handled above,\n        // before this code fires.)\n\n        if (!self.focusReal && self.$list.is(':visible')) {\n          self._dismiss();\n        }\n      });\n      return self;\n    },\n    // Show or hide the label (if one exists) depending on whether the input\n    // has focus or a value.\n    _toggleLabel: function _toggleLabel() {\n      var self = this,\n          $label = self.options.label;\n\n      if ($label && $label.length) {\n        if (self.focusPseudo || self.$input.val()) {\n          $label.hide();\n        } else {\n          $label.show();\n        }\n      }\n\n      return self;\n    },\n    // Get the first selectable item in the results list.\n    _firstSelectableItem: function _firstSelectableItem() {\n      return this.$list.children('li.mp_selectable:visible:first');\n    },\n    // Get the last selectable item in the results list.\n    _lastSelectableItem: function _lastSelectableItem() {\n      return this.$list.children('li.mp_selectable:visible:last');\n    },\n    // Get the currently highlighted item in the results list.\n    _highlighted: function _highlighted() {\n      return this.$list.children('li.mp_highlighted');\n    },\n    // Remove the highlight class from the specified item.\n    _removeHighlight: function _removeHighlight($item) {\n      $item.removeClass('mp_highlighted').attr('aria-selected', 'false').removeAttr('id');\n      this.$input.removeAttr('aria-activedescendant');\n      return this;\n    },\n    // Add the highlight class to the specified item.\n    _addHighlight: function _addHighlight($item) {\n      // The current highlight is removed to ensure that only one item is\n      // highlighted at a time.\n      this._removeHighlight(this._highlighted());\n\n      $item.addClass('mp_highlighted').attr({\n        'aria-selected': 'true',\n        'id': this.inputName + '_highlighted'\n      });\n      this.$input.attr('aria-activedescendant', $item.attr('id'));\n      return this;\n    },\n    // Highlight the first selectable item in the results list.\n    _highlightFirst: function _highlightFirst() {\n      this._addHighlight(this._firstSelectableItem());\n\n      return this;\n    },\n    // Highlight the last selectable item in the results list.\n    _highlightLast: function _highlightLast() {\n      this._addHighlight(this._lastSelectableItem());\n\n      return this;\n    },\n    // Highlight the item before the currently highlighted item.\n    _highlightPrev: function _highlightPrev() {\n      var $highlighted = this._highlighted(),\n          $prev = $highlighted.prevAll('li.mp_selectable:visible:first'); // If there is no \"previous\" selectable item, continue at the list's end.\n\n\n      if (!$prev.length) {\n        $prev = this._lastSelectableItem();\n      }\n\n      this._addHighlight($prev);\n\n      return this;\n    },\n    // Highlight the item after the currently highlighted item.\n    _highlightNext: function _highlightNext() {\n      var $highlighted = this._highlighted(),\n          $next = $highlighted.nextAll('li.mp_selectable:visible:first'); // If there is no \"next\" selectable item, continue at the list's\n      // beginning.\n\n\n      if (!$next.length) {\n        $next = this._firstSelectableItem();\n      }\n\n      this._addHighlight($next);\n\n      return this;\n    },\n    // Show the results list.\n    _showList: function _showList() {\n      // But only if there are results to be shown.\n      if (this.$list.children().length) {\n        this.$list.show();\n        this.$input.attr('aria-expanded', 'true');\n      }\n\n      return this;\n    },\n    // Hide the results list.\n    _hideList: function _hideList() {\n      this.$list.hide();\n      this.$input.removeAttr('aria-activedescendant').removeAttr('aria-expanded');\n      return this;\n    },\n    // Empty the results list.\n    _emptyList: function _emptyList() {\n      this.$list.empty();\n      this.$input.removeAttr('aria-activedescendant');\n      return this;\n    },\n    // Hide and empty the results list.\n    _hideAndEmptyList: function _hideAndEmptyList() {\n      this.$list.hide().empty();\n      this.$input.removeAttr('aria-activedescendant').removeAttr('aria-expanded');\n      return this;\n    },\n    // Build the results list from a successful request that returned no data.\n    _buildNoResultsList: function _buildNoResultsList(q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_no_results\" role=\"alert\" />'),\n          formatNoResults; // Fire 'formatNoResults' callback.\n\n      formatNoResults = options.formatNoResults && options.formatNoResults.call($input, q, $item);\n\n      if (formatNoResults) {\n        $item.html(formatNoResults);\n      }\n\n      self._trigger('noResults', [q, $item]); // Displaying a \"no results\" message is optional. It isn't displayed if\n      // the 'formatNoResults' callback returns a false value.\n\n\n      if (formatNoResults) {\n        $item.appendTo($list);\n\n        self._showList();\n      } else {\n        self._hideList();\n      }\n\n      return self;\n    },\n    // Build the results list from a successful request that returned data.\n    _buildResultsList: function _buildResultsList(q, data) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          // The currently selected data for use in comparison.\n      selected = self.selectedData,\n          // Whether to compare the currently selected item with the results. A\n      // 'compare' setting key has to be specified, and there must be a\n      // currently selected item.\n      compare = options.compare && selected,\n          compareCurrent,\n          compareSelected,\n          compareMatch = false,\n          datum,\n          $item = $(),\n          formatItem; // Loop through each result and add it to the list.\n\n      for (var i = 0, length = data.length; i < length; i++) {\n        datum = data[i];\n        $item = $('<li class=\"mp_item\" />');\n        formatItem = options.formatItem.call($input, datum, $item); // Store the original data for easy access later.\n\n        $item.data('marcoPolo', datum);\n        $item.html(formatItem).appendTo($list);\n\n        if (compare && options.highlight) {\n          // If the 'compare' setting is set to boolean 'true', assume the data\n          // is a string and compare directly.\n          if (options.compare === true) {\n            compareCurrent = datum;\n            compareSelected = selected;\n          } // Otherwise, assume the data is an object and the 'compare' setting\n          // is the attribute name to compare on.\n          else {\n              compareCurrent = datum[options.compare];\n              compareSelected = selected[options.compare];\n            } // Highlight this item if it matches the selected item.\n\n\n          if (compareCurrent === compareSelected) {\n            self._addHighlight($item); // Stop comparing the remaining results, as a match has been made.\n\n\n            compare = false;\n            compareMatch = true;\n          }\n        }\n      } // Mark all selectable items, based on the 'selectable' selector setting.\n\n\n      $list.children(options.selectable).addClass('mp_selectable').attr({\n        'aria-selected': 'false',\n        'role': 'option'\n      });\n\n      self._trigger('results', [data]);\n\n      self._showList(); // Highlight the first item in the results list if the currently selected\n      // item was not found and already highlighted, and the option to auto-\n      // highlight is enabled.\n\n\n      if (!compareMatch && options.highlight) {\n        self._highlightFirst();\n      }\n\n      return self;\n    },\n    // Build the results list from a successful request.\n    _buildSuccessList: function _buildSuccessList(q, data) {\n      var self = this,\n          $input = self.$input,\n          options = self.options;\n\n      self._emptyList(); // Fire 'formatData' callback.\n\n\n      if (options.formatData) {\n        data = options.formatData.call($input, data);\n      }\n\n      if (!data || data.length === 0 || $.isEmptyObject(data)) {\n        self._buildNoResultsList(q);\n      } else {\n        self._buildResultsList(q, data);\n      }\n\n      return self;\n    },\n    // Build the results list with an error message.\n    _buildErrorList: function _buildErrorList(jqXHR, textStatus, errorThrown) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_error\" role=\"alert\" />'),\n          formatError;\n\n      self._emptyList(); // Fire 'formatError' callback.\n\n\n      formatError = options.formatError && options.formatError.call($input, $item, jqXHR, textStatus, errorThrown);\n\n      if (formatError) {\n        $item.html(formatError);\n      }\n\n      self._trigger('error', [$item, jqXHR, textStatus, errorThrown]); // Displaying an error message is optional. It isn't displayed if the\n      // 'formatError' callback returns a false value.\n\n\n      if (formatError) {\n        $item.appendTo($list);\n\n        self._showList();\n      } else {\n        self._hideList();\n      }\n\n      return self;\n    },\n    // Build the results list with a message when the minimum number of\n    // characters hasn't been entered.\n    _buildMinCharsList: function _buildMinCharsList(q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_min_chars\" role=\"alert\" />'),\n          formatMinChars; // Don't display the minimum characters list when there are no\n      // characters.\n\n      if (!q.length) {\n        self._hideAndEmptyList();\n\n        return self;\n      }\n\n      self._emptyList(); // Fire 'formatMinChars' callback.\n\n\n      formatMinChars = options.formatMinChars && options.formatMinChars.call($input, options.minChars, $item);\n\n      if (formatMinChars) {\n        $item.html(formatMinChars);\n      }\n\n      self._trigger('minChars', [options.minChars, $item]); // Displaying a minimum characters message is optional. It isn't\n      // displayed if the 'formatMinChars' callback returns a false value.\n\n\n      if (formatMinChars) {\n        $item.appendTo($list);\n\n        self._showList();\n      } else {\n        self._hideList();\n      }\n\n      return self;\n    },\n    // Cancel any pending ajax request and input key buffer.\n    _cancelPendingRequest: function _cancelPendingRequest() {\n      var self = this; // Abort the ajax request if still in progress.\n\n      if (self.ajax) {\n        self.ajaxAborted = true;\n        self.ajax.abort();\n      } else {\n        self.ajaxAborted = false;\n      } // Clear the request buffer.\n\n\n      clearTimeout(self.timer);\n      return self;\n    },\n    // Make a request for the specified query and build the results list.\n    _request: function _request(q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options;\n\n      self._cancelPendingRequest(); // Check if the input value has changed.\n\n\n      self.change(q, true); // Requests are buffered the number of ms specified by the 'delay'\n      // setting. This helps prevent an ajax request for every keystroke.\n\n      self.timer = setTimeout(function () {\n        var data = {},\n            param = {},\n            params = {},\n            cacheKey,\n            $inputParent = $(); // Display the minimum characters message if not reached.\n\n        if (q.length < options.minChars) {\n          self._buildMinCharsList(q);\n\n          return self;\n        } // Get the additional data to send with the request.\n\n\n        data = $.isFunction(options.data) ? options.data.call(self.$input, q) : options.data; // Add the query to be sent with the request.\n\n        param[options.param] = q; // Merge all parameters together.\n\n        params = $.extend({}, data, param); // Build the request URL with query string data to use as the cache\n        // key.\n\n        cacheKey = options.url + (options.url.indexOf('?') === -1 ? '?' : '&') + $.param(params); // Check for and use cached results if enabled.\n\n        if (options.cache && cache[cacheKey]) {\n          self._buildSuccessList(q, cache[cacheKey]);\n        } // Otherwise, make an ajax request for the data.\n        else {\n            self._trigger('requestBefore'); // Add a class to the input's parent that can be hooked-into by the\n            // CSS to show a busy indicator.\n\n\n            $inputParent = $input.parent().addClass('mp_busy');\n            $list.attr('aria-busy', 'true'); // The ajax request is stored in case it needs to be aborted.\n\n            self.ajax = $.ajax({\n              url: options.url,\n              dataType: 'json',\n              data: params,\n              success: function success(data) {\n                self._buildSuccessList(q, data); // Cache the data.\n\n\n                if (options.cache) {\n                  cache[cacheKey] = data;\n                }\n              },\n              error: function error(jqXHR, textStatus, errorThrown) {\n                // Show the error message unless the ajax request was aborted\n                // by this plugin. 'ajaxAborted' is used because 'errorThrown'\n                // does not faithfull return \"aborted\" as the cause.\n                if (!self.ajaxAborted) {\n                  self._buildErrorList(jqXHR, textStatus, errorThrown);\n                }\n              },\n              complete: function complete(jqXHR, textStatus) {\n                // Reset ajax reference now that it's complete.\n                self.ajax = null;\n                self.ajaxAborted = false; // Remove the \"busy\" indicator class on the input's parent.\n\n                $inputParent.removeClass('mp_busy');\n                $list.attr('aria-busy', 'false');\n\n                self._trigger('requestAfter', [jqXHR, textStatus]);\n              }\n            });\n          }\n      }, options.delay);\n      return self;\n    },\n    // Dismiss the results list and cancel any pending activity.\n    _dismiss: function _dismiss() {\n      var self = this,\n          options = self.options;\n      self.focusPseudo = false;\n\n      self._cancelPendingRequest()._hideAndEmptyList(); // Empty the input value if the 'required' setting is enabled and nothing\n      // is selected.\n\n\n      if (options.required && !self.selectedData) {\n        self.change('', true);\n      }\n\n      self._toggleLabel()._trigger('blur');\n\n      return self;\n    },\n    // Trigger a callback subscribed to via an option or using .bind().\n    _trigger: function _trigger(name, args) {\n      var self = this,\n          callbackName = 'on' + name.charAt(0).toUpperCase() + name.slice(1),\n          triggerName = self.widgetEventPrefix.toLowerCase() + name.toLowerCase(),\n          triggerArgs = $.isArray(args) ? args : [],\n          callback = self.options[callbackName];\n      self.element.trigger(triggerName, triggerArgs);\n      return callback && callback.apply(self.element, triggerArgs);\n    }\n  });\n});","map":{"version":3,"sources":["/home/sinkline/Sasha san/Wacth_Rails/watch_rails/app/javascript/packs/jquery.marcopolo.js"],"names":["$","undefined","cleanData","_cleanData","elems","i","elem","triggerHandler","e","_remove","fn","remove","selector","keepData","each","filter","length","add","call","widget","name","base","prototype","namespace","split","fullName","Widget","expr","data","options","element","arguments","_createWidget","basePrototype","extend","widgetName","widgetEventPrefix","widgetBaseClass","bridge","object","isMethodCall","args","Array","slice","returnValue","apply","concat","charAt","instance","methodValue","isFunction","option","_init","disabled","_getCreateOptions","self","bind","destroy","_create","_trigger","metadata","get","unbind","removeData","removeAttr","removeClass","key","value","_setOptions","_setOption","attr","enable","disable","type","event","prop","orig","callback","Event","toLowerCase","target","originalEvent","trigger","isDefaultPrevented","jQuery","factory","define","amd","cache","compare","delay","formatData","formatError","formatItem","title","formatMinChars","minChars","formatNoResults","q","hideOnSelect","highlight","label","onBlur","onChange","onError","onFocus","onMinChars","onNoResults","onRequestBefore","onRequestAfter","onResults","onSelect","val","param","required","selectable","selected","submitOnEnter","url","keys","DOWN","END","ENTER","ESC","HOME","TAB","UP","$input","addClass","inputName","now","$list","hide","insertAfter","inputOriginals","ajax","ajaxAborted","documentMouseup","focusPseudo","focusReal","mousedown","selectedData","selectedMouseup","timer","_bindInput","_bindList","_bindDocument","_initSelected","_initOptions","allOptions","removeLabelId","_toggleLabel","select","closest","change","onlyValue","_cancelPendingRequest","_hideAndEmptyList","search","focus","$item","initial","_hideList","attribute","document","list","_request","$highlighted","which","preventDefault","_showList","_highlightPrev","_highlightNext","_highlightFirst","_highlightLast","is","_highlighted","setTimeout","_dismiss","delegate","_addHighlight","_removeHighlight","$label","show","_firstSelectableItem","children","_lastSelectableItem","$prev","prevAll","$next","nextAll","_emptyList","empty","_buildNoResultsList","html","appendTo","_buildResultsList","compareCurrent","compareSelected","compareMatch","datum","_buildSuccessList","isEmptyObject","_buildErrorList","jqXHR","textStatus","errorThrown","_buildMinCharsList","abort","clearTimeout","params","cacheKey","$inputParent","indexOf","parent","dataType","success","error","complete","callbackName","toUpperCase","triggerName","triggerArgs","isArray"],"mappings":"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","sourcesContent":["/*!\n * jQuery UI Widget 1.8.21\n *\n * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Widget\n */\n(function( $, undefined ) {\n\n// jQuery 1.4+\nif ( $.cleanData ) {\n  var _cleanData = $.cleanData;\n  $.cleanData = function( elems ) {\n    for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\n      try {\n        $( elem ).triggerHandler( \"remove\" );\n      // http://bugs.jquery.com/ticket/8235\n      } catch( e ) {}\n    }\n    _cleanData( elems );\n  };\n} else {\n  var _remove = $.fn.remove;\n  $.fn.remove = function( selector, keepData ) {\n    return this.each(function() {\n      if ( !keepData ) {\n        if ( !selector || $.filter( selector, [ this ] ).length ) {\n          $( \"*\", this ).add( [ this ] ).each(function() {\n            try {\n              $( this ).triggerHandler( \"remove\" );\n            // http://bugs.jquery.com/ticket/8235\n            } catch( e ) {}\n          });\n        }\n      }\n      return _remove.call( $(this), selector, keepData );\n    });\n  };\n}\n\n$.widget = function( name, base, prototype ) {\n  var namespace = name.split( \".\" )[ 0 ],\n    fullName;\n  name = name.split( \".\" )[ 1 ];\n  fullName = namespace + \"-\" + name;\n\n  if ( !prototype ) {\n    prototype = base;\n    base = $.Widget;\n  }\n\n  // create selector for plugin\n  $.expr[ \":\" ][ fullName ] = function( elem ) {\n    return !!$.data( elem, name );\n  };\n\n  $[ namespace ] = $[ namespace ] || {};\n  $[ namespace ][ name ] = function( options, element ) {\n    // allow instantiation without initializing for simple inheritance\n    if ( arguments.length ) {\n      this._createWidget( options, element );\n    }\n  };\n\n  var basePrototype = new base();\n  // we need to make the options hash a property directly on the new instance\n  // otherwise we'll modify the options hash on the prototype that we're\n  // inheriting from\n//  $.each( basePrototype, function( key, val ) {\n//    if ( $.isPlainObject(val) ) {\n//      basePrototype[ key ] = $.extend( {}, val );\n//    }\n//  });\n  basePrototype.options = $.extend( true, {}, basePrototype.options );\n  $[ namespace ][ name ].prototype = $.extend( true, basePrototype, {\n    namespace: namespace,\n    widgetName: name,\n    widgetEventPrefix: $[ namespace ][ name ].prototype.widgetEventPrefix || name,\n    widgetBaseClass: fullName\n  }, prototype );\n\n  $.widget.bridge( name, $[ namespace ][ name ] );\n};\n\n$.widget.bridge = function( name, object ) {\n  $.fn[ name ] = function( options ) {\n    var isMethodCall = typeof options === \"string\",\n      args = Array.prototype.slice.call( arguments, 1 ),\n      returnValue = this;\n\n    // allow multiple hashes to be passed on init\n    options = !isMethodCall && args.length ?\n      $.extend.apply( null, [ true, options ].concat(args) ) :\n      options;\n\n    // prevent calls to internal methods\n    if ( isMethodCall && options.charAt( 0 ) === \"_\" ) {\n      return returnValue;\n    }\n\n    if ( isMethodCall ) {\n      this.each(function() {\n        var instance = $.data( this, name ),\n          methodValue = instance && $.isFunction( instance[options] ) ?\n            instance[ options ].apply( instance, args ) :\n            instance;\n        // TODO: add this back in 1.9 and use $.error() (see #5972)\n//        if ( !instance ) {\n//          throw \"cannot call methods on \" + name + \" prior to initialization; \" +\n//            \"attempted to call method '\" + options + \"'\";\n//        }\n//        if ( !$.isFunction( instance[options] ) ) {\n//          throw \"no such method '\" + options + \"' for \" + name + \" widget instance\";\n//        }\n//        var methodValue = instance[ options ].apply( instance, args );\n        if ( methodValue !== instance && methodValue !== undefined ) {\n          returnValue = methodValue;\n          return false;\n        }\n      });\n    } else {\n      this.each(function() {\n        var instance = $.data( this, name );\n        if ( instance ) {\n          instance.option( options || {} )._init();\n        } else {\n          $.data( this, name, new object( options, this ) );\n        }\n      });\n    }\n\n    return returnValue;\n  };\n};\n\n$.Widget = function( options, element ) {\n  // allow instantiation without initializing for simple inheritance\n  if ( arguments.length ) {\n    this._createWidget( options, element );\n  }\n};\n\n$.Widget.prototype = {\n  widgetName: \"widget\",\n  widgetEventPrefix: \"\",\n  options: {\n    disabled: false\n  },\n  _createWidget: function( options, element ) {\n    // $.widget.bridge stores the plugin instance, but we do it anyway\n    // so that it's stored even before the _create function runs\n    $.data( element, this.widgetName, this );\n    this.element = $( element );\n    this.options = $.extend( true, {},\n      this.options,\n      this._getCreateOptions(),\n      options );\n\n    var self = this;\n    this.element.bind( \"remove.\" + this.widgetName, function() {\n      self.destroy();\n    });\n\n    this._create();\n    this._trigger( \"create\" );\n    this._init();\n  },\n  _getCreateOptions: function() {\n    return $.metadata && $.metadata.get( this.element[0] )[ this.widgetName ];\n  },\n  _create: function() {},\n  _init: function() {},\n\n  destroy: function() {\n    this.element\n      .unbind( \".\" + this.widgetName )\n      .removeData( this.widgetName );\n    this.widget()\n      .unbind( \".\" + this.widgetName )\n      .removeAttr( \"aria-disabled\" )\n      .removeClass(\n        this.widgetBaseClass + \"-disabled \" +\n        \"ui-state-disabled\" );\n  },\n\n  widget: function() {\n    return this.element;\n  },\n\n  option: function( key, value ) {\n    var options = key;\n\n    if ( arguments.length === 0 ) {\n      // don't return a reference to the internal hash\n      return $.extend( {}, this.options );\n    }\n\n    if  (typeof key === \"string\" ) {\n      if ( value === undefined ) {\n        return this.options[ key ];\n      }\n      options = {};\n      options[ key ] = value;\n    }\n\n    this._setOptions( options );\n\n    return this;\n  },\n  _setOptions: function( options ) {\n    var self = this;\n    $.each( options, function( key, value ) {\n      self._setOption( key, value );\n    });\n\n    return this;\n  },\n  _setOption: function( key, value ) {\n    this.options[ key ] = value;\n\n    if ( key === \"disabled\" ) {\n      this.widget()\n        [ value ? \"addClass\" : \"removeClass\"](\n          this.widgetBaseClass + \"-disabled\" + \" \" +\n          \"ui-state-disabled\" )\n        .attr( \"aria-disabled\", value );\n    }\n\n    return this;\n  },\n\n  enable: function() {\n    return this._setOption( \"disabled\", false );\n  },\n  disable: function() {\n    return this._setOption( \"disabled\", true );\n  },\n\n  _trigger: function( type, event, data ) {\n    var prop, orig,\n      callback = this.options[ type ];\n\n    data = data || {};\n    event = $.Event( event );\n    event.type = ( type === this.widgetEventPrefix ?\n      type :\n      this.widgetEventPrefix + type ).toLowerCase();\n    // the original event may come from any element\n    // so we need to reset the target on the new event\n    event.target = this.element[ 0 ];\n\n    // copy original event properties over to the new event\n    orig = event.originalEvent;\n    if ( orig ) {\n      for ( prop in orig ) {\n        if ( !( prop in event ) ) {\n          event[ prop ] = orig[ prop ];\n        }\n      }\n    }\n\n    this.element.trigger( event, data );\n\n    return !( $.isFunction(callback) &&\n      callback.call( this.element[0], event, data ) === false ||\n      event.isDefaultPrevented() );\n  }\n};\n\n})( jQuery );\n\n/*!\n * Marco Polo v1.8.1\n *\n * A jQuery autocomplete plugin for the discerning developer.\n *\n * https://github.com/jstayton/jquery-marcopolo\n *\n * Copyright 2014 by Justin Stayton\n * Licensed MIT\n */\n(function (factory) {\n  'use strict';\n\n  // Register as an AMD module, compatible with script loaders like RequireJS.\n  // Source: https://github.com/umdjs/umd/blob/master/jqueryPlugin.js\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  }\n  else {\n    factory(jQuery);\n  }\n}(function ($, undefined) {\n  'use strict';\n\n  // The cache spans all instances and is indexed by URL. This allows different\n  // instances to pull the same cached results if their URLs match.\n  var cache = {};\n\n  // jQuery UI's Widget Factory provides an object-oriented plugin framework\n  // that handles the common plumbing tasks.\n  $.widget('mp.marcoPolo', {\n    // Default options.\n    options: {\n      // Whether to cache query results.\n      cache: true,\n      // Whether to compare the selected item against items displayed in the\n      // results list. The selected item is highlighted if a match is found,\n      // instead of the first item in the list ('highlight' option must be\n      // enabled). Set this option to 'true' if the data is a string;\n      // otherwise, specify the data object attribute name to compare on.\n      compare: false,\n      // Additional data to be sent in the request query string.\n      data: {},\n      // The number of milliseconds to delay before firing a request after a\n      // change is made to the input value.\n      delay: 250,\n      // Format the raw data that's returned from the ajax request. Useful for\n      // further filtering the data or returning the array of results that's\n      // embedded deeper in the object.\n      formatData: null,\n      // Format the text that's displayed when the ajax request fails. Setting\n      // this option to 'null' or returning 'false' suppresses the message from\n      // being displayed.\n      formatError: function () {\n        return '<em>Your search could not be completed at this time.</em>';\n      },\n      // Format the display of each item in the results list.\n      formatItem: function (data) {\n        return data.title || data.name;\n      },\n      // Format the text that's displayed when the minimum number of characters\n      // (specified with the 'minChars' option) hasn't been reached. Setting\n      // this option to 'null' or returning 'false' suppresses the message from\n      // being displayed.\n      formatMinChars: function (minChars) {\n        return '<em>Your search must be at least <strong>' + minChars + '</strong> characters.</em>';\n      },\n      // Format the text that's displayed when there are no results returned\n      // for the requested input value. Setting this option to 'null' or\n      // returning 'false' suppresses the message from being displayed.\n      formatNoResults: function (q) {\n        return '<em>No results for <strong>' + q + '</strong>.</em>';\n      },\n      // Whether to hide the results list when an item is selected. The results\n      // list is still hidden when the input is blurred for any other reason.\n      hideOnSelect: true,\n      // Whether to automatically highlight an item when the results list is\n      // displayed. Usually it's the first item, but it could be the previously\n      // selected item if 'compare' is specified.\n      highlight: true,\n      // Positioning a label over an input is a common design pattern\n      // (sometimes referred to as 'overlabel') that unfortunately doesn't\n      // work so well with all of the input focus/blur events that occur with\n      // autocomplete. With this option, however, the hiding/showing of the\n      // label is handled internally to provide a built-in solution to the\n      // problem.\n      label: null,\n      // The minimum number of characters required before a request is fired.\n      minChars: 1,\n      // Called when the user is finished interacting with the autocomplete\n      // interface, not just the text input, which loses and gains focus on a\n      // results list mouse click.\n      onBlur: null,\n      // Called when the input value changes.\n      onChange: null,\n      // Called when the ajax request fails.\n      onError: null,\n      // Called when the input field receives focus.\n      onFocus: null,\n      // Called when the minimum number of characters (specified with the\n      // 'minChars' option) hasn't been reached by the end of the 'delay'.\n      onMinChars: null,\n      // Called when there are no results returned for the request.\n      onNoResults: null,\n      // Called before the ajax request is made.\n      onRequestBefore: null,\n      // Called after the ajax request completes (success or error).\n      onRequestAfter: null,\n      // Called when there are results to be displayed.\n      onResults: null,\n      // Called when an item is selected from the results list or passed in\n      // through the 'selected' option.\n      onSelect: function (data) {\n        this.val(data.title || data.name);\n      },\n      // The name of the query string parameter that is set with the input\n      // value.\n      param: 'q',\n      // Whether to clear the input value when no selection is made from the\n      // results list.\n      required: false,\n      // The list items to make selectable.\n      selectable: '*',\n      // Prime the input with a selected item.\n      selected: null,\n      // Whether to allow the browser's default behavior of submitting the form\n      // on ENTER.\n      submitOnEnter: false,\n      // The URL to GET request for the results.\n      url: null\n    },\n\n    // Key code to key name mapping for easy reference.\n    keys: {\n      DOWN: 40,\n      END: 35,\n      ENTER: 13,\n      ESC: 27,\n      HOME: 36,\n      TAB: 9,\n      UP: 38\n    },\n\n    // Initialize the plugin on an input.\n    _create: function () {\n      var self = this,\n          $input;\n\n      // Create a more appropriately named alias for the input.\n      self.$input = $input = self.element.addClass('mp_input');\n\n      // The existing input name or a created one. Used for building the ID of\n      // other elements.\n      self.inputName = 'mp_' + ($input.attr('name') || $.now());\n\n      // Create an empty list for displaying future results. Insert it directly\n      // after the input element.\n      self.$list = $('<ol class=\"mp_list\" />')\n                     .attr({\n                       'aria-atomic': 'true',\n                       'aria-busy': 'false',\n                       'aria-live': 'polite',\n                       'id': self.inputName + '_list',\n                       'role': 'listbox'\n                     })\n                     .hide()\n                     .insertAfter(self.$input);\n\n      // Remember original input attribute values for when 'destroy' is called\n      // and the input is returned to its original state.\n      self.inputOriginals = {\n        'aria-activedescendant': $input.attr('aria-activedescendant'),\n        'aria-autocomplete': $input.attr('aria-autocomplete'),\n        'aria-expanded': $input.attr('aria-expanded'),\n        'aria-labelledby': $input.attr('aria-labelledby'),\n        'aria-owns': $input.attr('aria-owns'),\n        'aria-required': $input.attr('aria-required'),\n        'autocomplete': $input.attr('autocomplete'),\n        'role': $input.attr('role')\n      };\n\n      // Set plugin-specific attributes.\n      $input.attr({\n        'aria-autocomplete': 'list',\n        'aria-owns': self.$list.attr('id'),\n        'autocomplete': 'off',\n        'role': 'combobox'\n      });\n\n      // The ajax request to get results is stored in case the request needs to\n      // be aborted before a response is returned.\n      self.ajax = null;\n      self.ajaxAborted = false;\n\n      // A reference to this function is maintained for unbinding in the\n      // 'destroy' method. This is necessary because the selector is so\n      // generic (document).\n      self.documentMouseup = null;\n\n      // \"Pseudo\" focus includes any interaction with the plugin, even if the\n      // input has blurred.\n      self.focusPseudo = false;\n\n      // \"Real\" focus is strictly when the input has focus.\n      self.focusReal = false;\n\n      // Whether a mousedown event is triggered on a list item.\n      self.mousedown = false;\n\n      // The currently selected data.\n      self.selectedData = null;\n\n      // Whether the last selection was by mouseup.\n      self.selectedMouseup = false;\n\n      // The request buffer timer in case the timer needs to be aborted due to\n      // another key press.\n      self.timer = null;\n\n      // The current input value for comparison.\n      self.value = self.$input.val();\n\n      // Bind the necessary events.\n      self\n        ._bindInput()\n        ._bindList()\n        ._bindDocument();\n\n      self\n        ._initSelected()\n        ._initOptions();\n    },\n\n    // Set an option.\n    _setOption: function (option, value) {\n      // Required call to the parent where the new option value is saved.\n      $.Widget.prototype._setOption.apply(this, arguments);\n\n      this._initOptions(option, value);\n    },\n\n    // Initialize options that require a little extra work.\n    _initOptions: function (option, value) {\n      var self = this,\n          allOptions = option === undefined,\n          options = {};\n\n      // If no option is specified, initialize all options.\n      if (allOptions) {\n        options = self.options;\n      }\n      // Otherwise, initialize only the specified option.\n      else {\n        options[option] = value;\n      }\n\n      $.each(options, function (option, value) {\n        switch (option) {\n          case 'label':\n            // Ensure that the 'label' is a jQuery object if a selector string\n            // or plain DOM element is passed.\n            self.options.label = $(value).addClass('mp_label');\n\n            // Ensure that the label has an ID for ARIA support.\n            if (self.options.label.attr('id')) {\n              self.removeLabelId = false;\n            }\n            else {\n              self.removeLabelId = true;\n\n              self.options.label.attr('id', self.inputName + '_label');\n            }\n\n            self._toggleLabel();\n\n            self.$input.attr('aria-labelledby', self.options.label.attr('id'));\n\n            break;\n\n          case 'required':\n            self.$input.attr('aria-required', value);\n\n            break;\n\n          case 'selected':\n            // During initial creation (when all options are initialized), only\n            // initialize the 'selected' value if there is one. The\n            // '_initSelected' method parses the input's attributes for a\n            // selected value.\n            if (allOptions && value) {\n              self.select(value, null, true);\n            }\n\n            break;\n\n          case 'url':\n            // If no 'url' option is specified, use the parent form's 'action'.\n            if (!value) {\n              self.options.url = self.$input.closest('form').attr('action');\n            }\n\n            break;\n        }\n      });\n\n      return self;\n    },\n\n    // Programmatically change the input value without triggering a search\n    // request (use the 'search' method for that). If the value is different\n    // than the current input value, the 'onChange' callback is fired.\n    change: function (q, onlyValue) {\n      var self = this;\n\n      // Change the input value if a new value is specified.\n      if (q === self.value) {\n        return;\n      }\n\n      if (q !== self.$input.val()) {\n        self.$input.val(q);\n      }\n\n      // Reset the currently selected data.\n      self.selectedData = null;\n\n      // Keep track of the new input value for later comparison.\n      self.value = q;\n\n      self._trigger('change', [q]);\n\n      if (onlyValue !== true) {\n        if (self.focusPseudo) {\n          // Clear out the existing results to prevent future stale results\n          // in case the change is made while the input has focus.\n          self\n            ._cancelPendingRequest()\n            ._hideAndEmptyList();\n        }\n        else {\n          // Show or hide the label depending on if the input has a value.\n          self._toggleLabel();\n        }\n      }\n    },\n\n    // Programmatically trigger a search request using the existing input value\n    // or a new one.\n    search: function (q) {\n      var $input = this.$input;\n\n      // Change the input value if a new value is specified. Otherwise, use the\n      // existing input value.\n      if (q !== undefined) {\n        $input.val(q);\n      }\n\n      // Focus on the input to start the request and enable keyboard\n      // navigation (only available when the input has focus).\n      $input.focus();\n    },\n\n    // Select an item from the results list.\n    select: function (data, $item, initial) {\n      var self = this,\n          $input = self.$input,\n          hideOnSelect = self.options.hideOnSelect;\n\n      if (hideOnSelect) {\n        self._hideList();\n      }\n\n      // If there's no data, consider this a call to deselect (or reset) the\n      // current value.\n      if (!data) {\n        return self.change('');\n      }\n\n      // Save the selected data for later reference.\n      self.selectedData = data;\n\n      self._trigger('select', [data, $item, !!initial]);\n\n      // It's common to update the input value with the selected item during\n      // 'onSelect', so check if that has occurred and store the new value.\n      if ($input.val() !== self.value) {\n        self.value = $input.val();\n\n        // Check if the label needs to be toggled when this method is called\n        // programmatically (usually meaning the input doesn't have focus).\n        if (!self.focusPseudo) {\n          self._toggleLabel();\n        }\n\n        // Hide and empty the existing results to prevent future stale results.\n        self._hideAndEmptyList();\n      }\n    },\n\n    // Initialize the input with a selected value from the 'data-selected'\n    // attribute (JSON) or standard 'value' attribute (string).\n    _initSelected: function () {\n      var self = this,\n          $input = self.$input,\n          data = $input.data('selected'),\n          value = $input.val();\n\n      if (data) {\n        self.select(data, null, true);\n      }\n      else if (value) {\n        self.select(value, null, true);\n      }\n\n      return self;\n    },\n\n    // Get the currently selected data.\n    selected: function () {\n      return this.selectedData;\n    },\n\n    // Remove the autocomplete functionality and return the selected input\n    // fields to their original state.\n    destroy: function () {\n      var self = this,\n          options = self.options,\n          $input = self.$input;\n\n      // Remove the results list element.\n      self.$list.remove();\n\n      // Reset the input to its original attribute values.\n      $.each(self.inputOriginals, function (attribute, value) {\n        if (value === undefined) {\n          $input.removeAttr(attribute);\n        }\n        else {\n          $input.attr(attribute, value);\n        }\n      });\n\n      $input.removeClass('mp_input');\n\n      // Reset the label to its original state.\n      if (options.label) {\n        options.label.removeClass('mp_label');\n\n        if (self.removeLabelId) {\n          options.label.removeAttr('id');\n        }\n      }\n\n      // Remove the specific document 'mouseup' event for this instance.\n      $(document).unbind('mouseup.marcoPolo', self.documentMouseup);\n\n      // Parent destroy removes the input's data and events.\n      $.Widget.prototype.destroy.apply(self, arguments);\n    },\n\n    // Get the results list element.\n    list: function () {\n      return this.$list;\n    },\n\n    // Bind the necessary events to the input.\n    _bindInput: function () {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list;\n\n      $input\n        .bind('focus.marcoPolo', function () {\n          // Do nothing if the input already has focus. This prevents\n          // additional 'focus' events from initiating the same request.\n          if (self.focusReal) {\n            return;\n          }\n\n          // It's overly complicated to check if an input field has focus, so\n          // \"manually\" keep track in the 'focus' and 'blur' events.\n          self.focusPseudo = true;\n          self.focusReal = true;\n\n          self._toggleLabel();\n\n          // If this focus is the result of a mouse selection (which re-focuses\n          // on the input), ignore as if a blur never occurred.\n          if (self.selectedMouseup) {\n            self.selectedMouseup = false;\n          }\n          // For everything else, initiate a request.\n          else {\n            self._trigger('focus');\n\n            self._request($input.val());\n          }\n        })\n        .bind('keydown.marcoPolo', function (key) {\n          var $highlighted = $();\n\n          switch (key.which) {\n            // Highlight the previous item.\n            case self.keys.UP:\n              // The default moves the cursor to the beginning or end of the\n              // input value. Keep it in its current place.\n              key.preventDefault();\n\n              // Show the list if it has been hidden by ESC.\n              self\n                ._showList()\n                ._highlightPrev();\n\n              break;\n\n            // Highlight the next item.\n            case self.keys.DOWN:\n              // The default moves the cursor to the beginning or end of the\n              // input value. Keep it in its current place.\n              key.preventDefault();\n\n              // Show the list if it has been hidden by ESC.\n              self\n                ._showList()\n                ._highlightNext();\n\n              break;\n\n            // Highlight the first item.\n            case self.keys.HOME:\n              // Show the list if it has been hidden by ESC.\n              self\n                ._showList()\n                ._highlightFirst();\n\n              break;\n\n            // Highlight the last item.\n            case self.keys.END:\n              // Show the list if it has been hidden by ESC.\n              self\n                ._showList()\n                ._highlightLast();\n\n              break;\n\n            // Select the currently highlighted item. Input keeps focus.\n            case self.keys.ENTER:\n              // Prevent selection if the list isn't visible.\n              if (!$list.is(':visible')) {\n                // Prevent the form from submitting.\n                if (!self.options.submitOnEnter) {\n                  key.preventDefault();\n                }\n\n                return;\n              }\n\n              $highlighted = self._highlighted();\n\n              if ($highlighted.length) {\n                self.select($highlighted.data('marcoPolo'), $highlighted);\n              }\n\n              // Prevent the form from submitting if 'submitOnEnter' is\n              // disabled or if there's a highlighted item.\n              if (!self.options.submitOnEnter || $highlighted.length) {\n                key.preventDefault();\n              }\n\n              break;\n\n            // Select the currently highlighted item. Input loses focus.\n            case self.keys.TAB:\n              // Prevent selection if the list isn't visible.\n              if (!$list.is(':visible')) {\n                return;\n              }\n\n              $highlighted = self._highlighted();\n\n              if ($highlighted.length) {\n                self.select($highlighted.data('marcoPolo'), $highlighted);\n              }\n\n              break;\n\n            // Hide the list.\n            case self.keys.ESC:\n              self\n                ._cancelPendingRequest()\n                ._hideList();\n\n              break;\n          }\n        })\n        .bind('keyup.marcoPolo', function () {\n          // Check if the input value has changed. This prevents keys like CTRL\n          // and SHIFT from firing a new request.\n          if ($input.val() !== self.value) {\n            self._request($input.val());\n          }\n        })\n        .bind('blur.marcoPolo', function () {\n          self.focusReal = false;\n\n          // When an item in the results list is clicked, the input blur event\n          // fires before the click event, causing the results list to become\n          // hidden (code below). This 1ms timeout ensures that the click event\n          // code fires before that happens.\n          setTimeout(function () {\n            // If the $list 'mousedown' event has fired without a 'mouseup'\n            // event, wait for that before dismissing everything.\n            if (!self.mousedown) {\n              self._dismiss();\n            }\n          }, 1);\n        });\n\n      return self;\n    },\n\n    // Bind the necessary events to the list.\n    _bindList: function () {\n      var self = this;\n\n      self.$list\n        .bind('mousedown.marcoPolo', function () {\n          // Tracked for use in the input 'blur' event.\n          self.mousedown = true;\n        })\n        .delegate('li.mp_selectable', 'mouseover', function () {\n          self._addHighlight($(this));\n        })\n        .delegate('li.mp_selectable', 'mouseout', function () {\n          self._removeHighlight($(this));\n        })\n        .delegate('li.mp_selectable', 'mouseup', function () {\n          var $item = $(this);\n\n          self.select($item.data('marcoPolo'), $item);\n\n          // This event is tracked so that when 'focus' is called on the input\n          // (below), a new request isn't fired.\n          self.selectedMouseup = true;\n\n          // Give focus back to the input for easy tabbing on to the next\n          // field.\n          self.$input.focus();\n        });\n\n      return self;\n    },\n\n    // Bind the necessary events to the document.\n    _bindDocument: function () {\n      var self = this;\n\n      // A reference to this function is maintained for unbinding in the\n      // 'destroy' method. This is necessary because the selector is so\n      // generic (document).\n      $(document).bind('mouseup.marcoPolo', self.documentMouseup = function () {\n        // Tracked for use in the input 'blur' event.\n        self.mousedown = false;\n\n        // Ensure that everything is dismissed if anything other than the input\n        // is clicked. (A click on a selectable list item is handled above,\n        // before this code fires.)\n        if (!self.focusReal && self.$list.is(':visible')) {\n          self._dismiss();\n        }\n      });\n\n      return self;\n    },\n\n    // Show or hide the label (if one exists) depending on whether the input\n    // has focus or a value.\n    _toggleLabel: function () {\n      var self = this,\n          $label = self.options.label;\n\n      if ($label && $label.length) {\n        if (self.focusPseudo || self.$input.val()) {\n          $label.hide();\n        }\n        else {\n          $label.show();\n        }\n      }\n\n      return self;\n    },\n\n    // Get the first selectable item in the results list.\n    _firstSelectableItem: function () {\n      return this.$list.children('li.mp_selectable:visible:first');\n    },\n\n    // Get the last selectable item in the results list.\n    _lastSelectableItem: function () {\n      return this.$list.children('li.mp_selectable:visible:last');\n    },\n\n    // Get the currently highlighted item in the results list.\n    _highlighted: function () {\n      return this.$list.children('li.mp_highlighted');\n    },\n\n    // Remove the highlight class from the specified item.\n    _removeHighlight: function ($item) {\n      $item\n        .removeClass('mp_highlighted')\n        .attr('aria-selected', 'false')\n        .removeAttr('id');\n\n      this.$input.removeAttr('aria-activedescendant');\n\n      return this;\n    },\n\n    // Add the highlight class to the specified item.\n    _addHighlight: function ($item) {\n      // The current highlight is removed to ensure that only one item is\n      // highlighted at a time.\n      this._removeHighlight(this._highlighted());\n\n      $item\n        .addClass('mp_highlighted')\n        .attr({\n          'aria-selected': 'true',\n          'id': this.inputName + '_highlighted'\n        });\n\n      this.$input.attr('aria-activedescendant', $item.attr('id'));\n\n      return this;\n    },\n\n    // Highlight the first selectable item in the results list.\n    _highlightFirst: function () {\n      this._addHighlight(this._firstSelectableItem());\n\n      return this;\n    },\n\n    // Highlight the last selectable item in the results list.\n    _highlightLast: function () {\n      this._addHighlight(this._lastSelectableItem());\n\n      return this;\n    },\n\n    // Highlight the item before the currently highlighted item.\n    _highlightPrev: function () {\n      var $highlighted = this._highlighted(),\n          $prev = $highlighted.prevAll('li.mp_selectable:visible:first');\n\n      // If there is no \"previous\" selectable item, continue at the list's end.\n      if (!$prev.length) {\n        $prev = this._lastSelectableItem();\n      }\n\n      this._addHighlight($prev);\n\n      return this;\n    },\n\n    // Highlight the item after the currently highlighted item.\n    _highlightNext: function () {\n      var $highlighted = this._highlighted(),\n          $next = $highlighted.nextAll('li.mp_selectable:visible:first');\n\n      // If there is no \"next\" selectable item, continue at the list's\n      // beginning.\n      if (!$next.length) {\n        $next = this._firstSelectableItem();\n      }\n\n      this._addHighlight($next);\n\n      return this;\n    },\n\n    // Show the results list.\n    _showList: function () {\n      // But only if there are results to be shown.\n      if (this.$list.children().length) {\n        this.$list.show();\n\n        this.$input.attr('aria-expanded', 'true');\n      }\n\n      return this;\n    },\n\n    // Hide the results list.\n    _hideList: function () {\n      this.$list.hide();\n\n      this.$input\n        .removeAttr('aria-activedescendant')\n        .removeAttr('aria-expanded');\n\n      return this;\n    },\n\n    // Empty the results list.\n    _emptyList: function () {\n      this.$list.empty();\n\n      this.$input.removeAttr('aria-activedescendant');\n\n      return this;\n    },\n\n    // Hide and empty the results list.\n    _hideAndEmptyList: function () {\n      this.$list\n        .hide()\n        .empty();\n\n      this.$input\n        .removeAttr('aria-activedescendant')\n        .removeAttr('aria-expanded');\n\n      return this;\n    },\n\n    // Build the results list from a successful request that returned no data.\n    _buildNoResultsList: function (q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_no_results\" role=\"alert\" />'),\n          formatNoResults;\n\n      // Fire 'formatNoResults' callback.\n      formatNoResults = options.formatNoResults && options.formatNoResults.call($input, q, $item);\n\n      if (formatNoResults) {\n        $item.html(formatNoResults);\n      }\n\n      self._trigger('noResults', [q, $item]);\n\n      // Displaying a \"no results\" message is optional. It isn't displayed if\n      // the 'formatNoResults' callback returns a false value.\n      if (formatNoResults) {\n        $item.appendTo($list);\n\n        self._showList();\n      }\n      else {\n        self._hideList();\n      }\n\n      return self;\n    },\n\n    // Build the results list from a successful request that returned data.\n    _buildResultsList: function (q, data) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          // The currently selected data for use in comparison.\n          selected = self.selectedData,\n          // Whether to compare the currently selected item with the results. A\n          // 'compare' setting key has to be specified, and there must be a\n          // currently selected item.\n          compare = options.compare && selected,\n          compareCurrent,\n          compareSelected,\n          compareMatch = false,\n          datum,\n          $item = $(),\n          formatItem;\n\n      // Loop through each result and add it to the list.\n      for (var i = 0, length = data.length; i < length; i++) {\n        datum = data[i];\n        $item = $('<li class=\"mp_item\" />');\n        formatItem = options.formatItem.call($input, datum, $item);\n\n        // Store the original data for easy access later.\n        $item.data('marcoPolo', datum);\n\n        $item\n          .html(formatItem)\n          .appendTo($list);\n\n        if (compare && options.highlight) {\n          // If the 'compare' setting is set to boolean 'true', assume the data\n          // is a string and compare directly.\n          if (options.compare === true) {\n            compareCurrent = datum;\n            compareSelected = selected;\n          }\n          // Otherwise, assume the data is an object and the 'compare' setting\n          // is the attribute name to compare on.\n          else {\n            compareCurrent = datum[options.compare];\n            compareSelected = selected[options.compare];\n          }\n\n          // Highlight this item if it matches the selected item.\n          if (compareCurrent === compareSelected) {\n            self._addHighlight($item);\n\n            // Stop comparing the remaining results, as a match has been made.\n            compare = false;\n            compareMatch = true;\n          }\n        }\n      }\n\n      // Mark all selectable items, based on the 'selectable' selector setting.\n      $list\n        .children(options.selectable)\n        .addClass('mp_selectable')\n        .attr({\n          'aria-selected': 'false',\n          'role': 'option'\n        });\n\n      self._trigger('results', [data]);\n\n      self._showList();\n\n      // Highlight the first item in the results list if the currently selected\n      // item was not found and already highlighted, and the option to auto-\n      // highlight is enabled.\n      if (!compareMatch && options.highlight) {\n        self._highlightFirst();\n      }\n\n      return self;\n    },\n\n    // Build the results list from a successful request.\n    _buildSuccessList: function (q, data) {\n      var self = this,\n          $input = self.$input,\n          options = self.options;\n\n      self._emptyList();\n\n      // Fire 'formatData' callback.\n      if (options.formatData) {\n        data = options.formatData.call($input, data);\n      }\n\n      if (!data || data.length === 0 || $.isEmptyObject(data)) {\n        self._buildNoResultsList(q);\n      }\n      else {\n        self._buildResultsList(q, data);\n      }\n\n      return self;\n    },\n\n    // Build the results list with an error message.\n    _buildErrorList: function (jqXHR, textStatus, errorThrown) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_error\" role=\"alert\" />'),\n          formatError;\n\n      self._emptyList();\n\n      // Fire 'formatError' callback.\n      formatError = options.formatError && options.formatError.call($input, $item, jqXHR, textStatus, errorThrown);\n\n      if (formatError) {\n        $item.html(formatError);\n      }\n\n      self._trigger('error', [$item, jqXHR, textStatus, errorThrown]);\n\n      // Displaying an error message is optional. It isn't displayed if the\n      // 'formatError' callback returns a false value.\n      if (formatError) {\n        $item.appendTo($list);\n\n        self._showList();\n      }\n      else {\n        self._hideList();\n      }\n\n      return self;\n    },\n\n    // Build the results list with a message when the minimum number of\n    // characters hasn't been entered.\n    _buildMinCharsList: function (q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options,\n          $item = $('<li class=\"mp_min_chars\" role=\"alert\" />'),\n          formatMinChars;\n\n      // Don't display the minimum characters list when there are no\n      // characters.\n      if (!q.length) {\n        self._hideAndEmptyList();\n\n        return self;\n      }\n\n      self._emptyList();\n\n      // Fire 'formatMinChars' callback.\n      formatMinChars = options.formatMinChars && options.formatMinChars.call($input, options.minChars, $item);\n\n      if (formatMinChars) {\n        $item.html(formatMinChars);\n      }\n\n      self._trigger('minChars', [options.minChars, $item]);\n\n      // Displaying a minimum characters message is optional. It isn't\n      // displayed if the 'formatMinChars' callback returns a false value.\n      if (formatMinChars) {\n        $item.appendTo($list);\n\n        self._showList();\n      }\n      else {\n        self._hideList();\n      }\n\n      return self;\n    },\n\n    // Cancel any pending ajax request and input key buffer.\n    _cancelPendingRequest: function () {\n      var self = this;\n\n      // Abort the ajax request if still in progress.\n      if (self.ajax) {\n        self.ajaxAborted = true;\n        self.ajax.abort();\n      }\n      else {\n        self.ajaxAborted = false;\n      }\n\n      // Clear the request buffer.\n      clearTimeout(self.timer);\n\n      return self;\n    },\n\n    // Make a request for the specified query and build the results list.\n    _request: function (q) {\n      var self = this,\n          $input = self.$input,\n          $list = self.$list,\n          options = self.options;\n\n      self._cancelPendingRequest();\n\n      // Check if the input value has changed.\n      self.change(q, true);\n\n      // Requests are buffered the number of ms specified by the 'delay'\n      // setting. This helps prevent an ajax request for every keystroke.\n      self.timer = setTimeout(function () {\n        var data = {},\n            param = {},\n            params = {},\n            cacheKey,\n            $inputParent = $();\n\n        // Display the minimum characters message if not reached.\n        if (q.length < options.minChars) {\n          self._buildMinCharsList(q);\n\n          return self;\n        }\n\n        // Get the additional data to send with the request.\n        data = $.isFunction(options.data) ? options.data.call(self.$input, q) : options.data;\n\n        // Add the query to be sent with the request.\n        param[options.param] = q;\n\n        // Merge all parameters together.\n        params = $.extend({}, data, param);\n\n        // Build the request URL with query string data to use as the cache\n        // key.\n        cacheKey = options.url + (options.url.indexOf('?') === -1 ? '?' : '&') + $.param(params);\n\n        // Check for and use cached results if enabled.\n        if (options.cache && cache[cacheKey]) {\n          self._buildSuccessList(q, cache[cacheKey]);\n        }\n        // Otherwise, make an ajax request for the data.\n        else {\n          self._trigger('requestBefore');\n\n          // Add a class to the input's parent that can be hooked-into by the\n          // CSS to show a busy indicator.\n          $inputParent = $input.parent().addClass('mp_busy');\n          $list.attr('aria-busy', 'true');\n\n          // The ajax request is stored in case it needs to be aborted.\n          self.ajax = $.ajax({\n            url: options.url,\n            dataType: 'json',\n            data: params,\n            success:\n              function (data) {\n                self._buildSuccessList(q, data);\n\n                // Cache the data.\n                if (options.cache) {\n                  cache[cacheKey] = data;\n                }\n              },\n            error:\n              function (jqXHR, textStatus, errorThrown) {\n                // Show the error message unless the ajax request was aborted\n                // by this plugin. 'ajaxAborted' is used because 'errorThrown'\n                // does not faithfull return \"aborted\" as the cause.\n                if (!self.ajaxAborted) {\n                  self._buildErrorList(jqXHR, textStatus, errorThrown);\n                }\n              },\n            complete:\n              function (jqXHR, textStatus) {\n                // Reset ajax reference now that it's complete.\n                self.ajax = null;\n                self.ajaxAborted = false;\n\n                // Remove the \"busy\" indicator class on the input's parent.\n                $inputParent.removeClass('mp_busy');\n                $list.attr('aria-busy', 'false');\n\n                self._trigger('requestAfter', [jqXHR, textStatus]);\n              }\n          });\n        }\n      }, options.delay);\n\n      return self;\n    },\n\n    // Dismiss the results list and cancel any pending activity.\n    _dismiss: function () {\n      var self = this,\n          options = self.options;\n\n      self.focusPseudo = false;\n\n      self\n        ._cancelPendingRequest()\n        ._hideAndEmptyList();\n\n      // Empty the input value if the 'required' setting is enabled and nothing\n      // is selected.\n      if (options.required && !self.selectedData) {\n        self.change('', true);\n      }\n\n      self\n        ._toggleLabel()\n        ._trigger('blur');\n\n      return self;\n    },\n\n    // Trigger a callback subscribed to via an option or using .bind().\n    _trigger: function (name, args) {\n      var self = this,\n          callbackName = 'on' + name.charAt(0).toUpperCase() + name.slice(1),\n          triggerName = self.widgetEventPrefix.toLowerCase() + name.toLowerCase(),\n          triggerArgs = $.isArray(args) ? args : [],\n          callback = self.options[callbackName];\n\n      self.element.trigger(triggerName, triggerArgs);\n\n      return callback && callback.apply(self.element, triggerArgs);\n    }\n  });\n}));\n"]},"metadata":{},"sourceType":"module"}