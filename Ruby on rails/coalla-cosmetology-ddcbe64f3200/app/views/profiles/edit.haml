%main#main.main{role: 'main'}
  %section.info_page{role: 'region', aria: {label: 'Index'}}
    .ctn
      %header.flowers.flowers_5
        .flowers_inner
          %h1 РЕДАКТИРОВАТЬ
          %h1 ПРОФИЛЬ



      = form_for current_user, url: profile_path, method: :put, html: {class: 'form js-form profile_edit'}, builder: CustomFormBuilder do |f|
        = hidden_field_tag :version, current_user.version
        - if flash[:profile_alert].present?
          .alert= flash[:profile_alert]
        .grid
          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Имя
          .grid_i.grid_i__grid-1-3>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:first_name)}
              = f.text_field :first_name, class: 'form_el_tag form_tx_tag'
            = errors_text f, :first_name
          .grid_i.grid_i__grid-1-3.tx-right>

          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Фамилия
          .grid_i.grid_i__grid-1-3>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:last_name)}
              = f.text_field :last_name, class: 'form_el_tag form_tx_tag'
            = errors_text f, :last_name
          .grid_i.grid_i__grid-1-3.tx-right>


          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Почта
          .grid_i.grid_i__grid-1-3>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:last_name)}
              = f.text_field :email, class: 'form_el_tag form_tx_tag'
            = errors_text f, :email
          .grid_i.grid_i__grid-1-3.tx-right>

          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Пароль
          .grid_i.grid_i__grid-1-3>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:password)}
              = f.password_field :password, class: 'form_el_tag form_tx_tag', placeholder: 'Введите новый пароль', data: {type: 'password'}
            = errors_text f, :password
          .grid_i.grid_i__grid-1-3.p-r>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:password_confirmation)}
              = f.password_field :password_confirmation, class: 'form_el_tag form_tx_tag', placeholder: 'Повторите пароль', data: {type: 'password'}
            = errors_text f, :password_confirmation
            .show_pass.js-show_pass
              %i.fa.fa-eye-slash

          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Телефон
          .grid_i.grid_i__grid-1-3.grid_i__suffix-1-3>
            .form_el.js-form_el.form_tx{data: error_data_attributes(f,:phones)}
              = f.fields_for :user_phones do |up|
                = up.telephone_field :number, class: 'form_el_tag form_tx_tag input js-intl-tel'
            = errors_text f, :phones

          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Facebook
          .grid_i.grid_i__grid-1-3.grid_i__suffix-1-3>
            %span.social_links-a
              %i.fa.fa-facebook
            - unless current_user.authenticate_through?(:facebook)
              = link_to 'Привязать аккаунт', user_omniauth_authorize_path(:facebook), class: 'a_under tx-i'
            - else
              = link_to 'Удалить привязку', user_authentication_path(:facebook), method: :delete, class: 'a_under tx-i'

          .grid_i.grid_i__grid-1-3>
            %label.form_el.form_el__block.form_label Подписка на блог
          .grid_i.grid_i__grid-2-3>
            %label.form_el.form_label.form_label__el
              .form_el.js-form_el.form_checkbox
                = f.check_box :has_blog_subscription, class: 'form_el_tag form_checkbox_tag'
              %p.form_el_inner.form_label_inner Присылать мне уведомления о новых постах

          .grid_i.grid_i__grid-1-1.tx-center.mt-2>
            .tx-700 Группы
          - current_user.group_subscriptions.actual.each do |group_subscription|
            .grid_i.grid_i__grid-1-4.tx-center>
              = render 'group_subscription', group_subscription: group_subscription

          .grid_i.grid_i__grid-1-1.tx-center.mt-2>
            .tx-700 Копии документов об образовании
          .grid_i.grid_i__grid-1-1.js-document-copies.mt-1>
            = f.fields_for :document_copies do |document_copy_fields|
              = render 'document_copy_fields', f: document_copy_fields
          .grid_i.grid_i__grid-1-4.grid_i__suffix-3-4.mt-2>
            .form_el.js-form_el.form-file
              %span
                .icon_add> +
              %span.a_under Загрузить
              %input.form_el_tag.form_file_tag.js-profile-document-copy{:type => 'file'}

          .grid_i.grid_i__grid-1-1.tx-center>
            .tx-700 Копии документов
          .grid_i.grid_i__grid-1-1.js-copies>
            = f.fields_for :student_documents, include_id: false do |student_document_fields|
              = render 'student_document_fields', f: student_document_fields

          .grid_i.grid_i__grid-1-1.mt-1>
            = link_to_add_association f, :student_documents, class: 'a_under', data: {association_insertion_method: 'append', association_insertion_node: '.js-copies'} do
              .icon_add> +
              Добавить документ

          .grid_i.grid_i__grid-1-1.tx-center>
            .tx-700 Договоры
          .grid_i.grid_i__grid-1-1.mb-4>
            .grid
              - current_user.group_subscriptions.actual.with_generated_documents.each do |subscription|
                .grid_i.grid_i__grid-1-1.mt-1>
                  .edit_title
                    = subscription.group_title
                - subscription.generated_documents.each do |document|
                  - if document.try(:path).present? && File.file?(document.path)
                    .grid_i.grid_i__grid-1-1>
                      .edit_link
                        = link_to "Скачать #{document.file_name.to_s}", download_admin_generated_document_url(document), class: 'a_under'

          .grid_i.grid_i__grid-1-3.grid_i__prefix-1-3.mt-1>
            .form_el.js-form_el.form_btn
              %p.form_el_inner.form_btn_inner СОХРАНИТЬ
              = f.submit '', class: 'form_el_tag form_btn_tag'

          = content_for :js do
            %script#document_copy_template{type: 'text/template'}
              = f.fields_for :document_copies, DocumentCopy.new, child_index: '__id__', include_id: false do |document_copy_fields|
                = render 'document_copy_fields', f: document_copy_fields

= content_for :js do
  = javascript_include_tag 'profile'